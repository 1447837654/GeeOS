// arch definitions of Risky32 emulator

public type ISize = i32
public type USize = u32

inline let FLASH_ADDR   = 0x90020000
inline let MEM_ADDR     = 0x80000000
inline let MEM_SIZE_MIB = 4
inline let UART_ADDR    = 0x90000104
inline let UART_END     = 0x90000200
inline let CLINT_ADDR   = 0x90010000
inline let CLINT_END    = 0x90010200
inline let CLINT_MTIME  = 0x90010000
inline let CLINT_MCMP   = 0x90010100

inline def initIO() {}

inline def putChar(c: u8) {
  *(0x90000104 as u8 volatile var*) = c
}

inline def getChar(): i32 {
  *(0x90000104 as u8 volatile var*) as i32
}

inline def halt(code: i32) {
  *(0x90000100 as u8 volatile var*) = 1 as u8
  while true {}
}

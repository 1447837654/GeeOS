// definitions about RISC-V paging system

// page-based virtual memory
inline let PAGE_SIZE        = 4096  // bytes per page
inline let PAGE_PTE_SIZE    = 4     // bytes per PTE
inline let PAGE_SHIFT       = 12    // bytes of offset within a page
inline let PAGE_PTE_COUNT   = PAGE_SIZE / PAGE_PTE_SIZE
inline let PAGE_ATTR_V      = 1 << 0                // valid
inline let PAGE_ATTR_R      = 1 << 1                // read-only
inline let PAGE_ATTR_E      = 1 << 3                // executable
inline let PAGE_ATTR_WR     = (1 << 1) | (1 << 2)   // writable & readable

// round up address to page boundary
inline def roundUpPage(addr: USize): USize {
  (addr + (PAGE_SIZE - 1) as USize) & (~(PAGE_SIZE - 1) as USize)
}

// round down address to page boundary
inline def roundDownPage(addr: USize): USize {
  addr & (~(PAGE_SIZE - 1) as USize)
}

// get 'vpn[1]' field of virtual address
inline def getVpn1(addr: USize): USize {
  addr >> 22 as USize
}

// get 'vpn[0]' field of virtual address
inline def getVpn0(addr: USize): USize {
  (addr >> 12 as USize) & 0x3ff as USize
}

// convert physical address to PTE
inline def convPaddrPte(addr: USize): USize {
  (addr >> 12 as USize) << 10 as USize
}

// convert PTE to physical address
inline def convPtePaddr(pte: USize): USize {
  (pte >> 10 as USize) << 12 as USize
}
